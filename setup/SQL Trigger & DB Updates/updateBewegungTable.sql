USE [Priebslogistik];
SET XACT_ABORT ON;
BEGIN TRAN;

-- 1) Neue Tabelle mit IDENTITY & gewünschter Nullability/Defaults
CREATE TABLE dbo.BEWEGUNG_new(
  IDNR  bigint NOT NULL IDENTITY(1,1),
  TERMINAL nchar(3) NULL,
  BUCHUNGDATUMZEITZIELSERVER datetime NULL,
  BUCHUNGDATUMZIELSERVER    nchar(8) NULL,
  BUCHUNGZEITZIELSERVER     nchar(6) NULL,
  BUCHUNGSQUELLE            nchar(25) NULL,
  BARCODE                   nchar(30) NULL,
  EINHEIT                   nchar(25) NULL,
  VORGANG                   nchar(25) NULL,
  BUCHUNGDATUMZEITVORGANG   datetime NULL,
  BUCHUNGDATUMVORGANG       nchar(8) NULL,
  BUCHUNGZEITVORGANG        nchar(6) NULL,
  STANDORT                  nchar(30) NULL,
  LAGERPLATZ                nchar(30) NULL,
  BEARBEITER1               nchar(30) NULL,
  BEARBEITER2               nchar(30) NULL,
  BEMERKUNGEN               nchar(128) NULL,
  DATEIANHANG               nchar(30) NULL,
  EXPORTFLAG                nchar(4) NULL CONSTRAINT DF_BEWEGUNG_EXPORTFLAG DEFAULT (NULL),
  EXPORTSTAPEL              int NULL    CONSTRAINT DF_BEWEGUNG_EXPORTSTAPEL DEFAULT (0),
  EXPORTDATUMZEIT           datetime NULL,
  CONSTRAINT PK_BEWEGUNG_new PRIMARY KEY CLUSTERED (IDNR)
);

-- 2) Bestehende Daten übernehmen (IDs beibehalten, falls vorhanden)
IF EXISTS (SELECT 1 FROM dbo.BEWEGUNG WHERE IDNR IS NOT NULL)
BEGIN
  SET IDENTITY_INSERT dbo.BEWEGUNG_new ON;
  INSERT dbo.BEWEGUNG_new (IDNR, TERMINAL, BUCHUNGDATUMZEITZIELSERVER, BUCHUNGDATUMZIELSERVER, BUCHUNGZEITZIELSERVER,
                           BUCHUNGSQUELLE, BARCODE, EINHEIT, VORGANG, BUCHUNGDATUMZEITVORGANG, BUCHUNGDATUMVORGANG,
                           BUCHUNGZEITVORGANG, STANDORT, LAGERPLATZ, BEARBEITER1, BEARBEITER2, BEMERKUNGEN, DATEIANHANG,
                           EXPORTFLAG, EXPORTSTAPEL, EXPORTDATUMZEIT)
  SELECT IDNR, TERMINAL, BUCHUNGDATUMZEITZIELSERVER, BUCHUNGDATUMZIELSERVER, BUCHUNGZEITZIELSERVER,
         BUCHUNGSQUELLE, BARCODE, EINHEIT, VORGANG, BUCHUNGDATUMZEITVORGANG, BUCHUNGDATUMVORGANG,
         BUCHUNGZEITVORGANG, STANDORT, LAGERPLATZ, BEARBEITER1, BEARBEITER2, BEMERKUNGEN, DATEIANHANG,
         EXPORTFLAG, EXPORTSTAPEL, EXPORTDATUMZEIT
  FROM dbo.BEWEGUNG WHERE IDNR IS NOT NULL;
  SET IDENTITY_INSERT dbo.BEWEGUNG_new OFF;
END;

-- Für evtl. NULL-IDs (generiert neue IDs)
INSERT dbo.BEWEGUNG_new (TERMINAL, BUCHUNGDATUMZEITZIELSERVER, BUCHUNGDATUMZIELSERVER, BUCHUNGZEITZIELSERVER,
                         BUCHUNGSQUELLE, BARCODE, EINHEIT, VORGANG, BUCHUNGDATUMZEITVORGANG, BUCHUNGDATUMVORGANG,
                         BUCHUNGZEITVORGANG, STANDORT, LAGERPLATZ, BEARBEITER1, BEARBEITER2, BEMERKUNGEN, DATEIANHANG,
                         EXPORTFLAG, EXPORTSTAPEL, EXPORTDATUMZEIT)
SELECT TERMINAL, BUCHUNGDATUMZEITZIELSERVER, BUCHUNGDATUMZIELSERVER, BUCHUNGZEITZIELSERVER,
       BUCHUNGSQUELLE, BARCODE, EINHEIT, VORGANG, BUCHUNGDATUMZEITVORGANG, BUCHUNGDATUMVORGANG,
       BUCHUNGZEITVORGANG, STANDORT, LAGERPLATZ, BEARBEITER1, BEARBEITER2, BEMERKUNGEN, DATEIANHANG,
       EXPORTFLAG, EXPORTSTAPEL, EXPORTDATUMZEIT
FROM dbo.BEWEGUNG WHERE IDNR IS NULL;

-- 3) Swap
EXEC sp_rename 'dbo.BEWEGUNG',      'BEWEGUNG_old';
EXEC sp_rename 'dbo.BEWEGUNG_new',  'BEWEGUNG';

COMMIT;
